service: disposable-email-api

plugins:
  - serverless-prune-plugin
  - serverless-offline
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters

custom:
  prune:
    automatic: true
    number: 3
  settings: ${file(./statusCodes.yml)}
  cors:
    staging: false
    production: false
    default: true
  serverless-offline:
    httpPort: 4000
    lambdaPort: 4001
  domainName: "happyeme.com"
  accountId: #{AWS::AccountId}
  ruleSetName: "happyemerule"
  emailsTableName: "disposable_emails_table"
  sessionsTableName: "disposable_sessions_table"
  addressesTableName: "disposable_addresses_table"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: ${opt:region}

  tags:
    Service: ${self:service}
    Owner: binli
    Environment: ${env:ENVIRONMENT}
    Region: ${self:provider.region}
    Version: ${env:SERVICE_VERSION}

  stackTags:
    Service: ${self:service}
    Owner: binli
    Environment: ${env:ENVIRONMENT}
    Region: ${self:provider.region}
    Version: ${env:SERVICE_VERSION}
  environment:
    emailsTableName: "disposable_emails_table"
    sessionsTableName: "disposable_sessions_table"
    addressesTableName: "disposable_addresses_table"
    mailboxTTL: 3600
    sessionTTL: 600

functions:
  auth:
    handler: src/handlers/authorizer.handler
    timeout: 30
    memorySize: 128
    tags:
      Name: auth
      Type: authorizer
  authToken:
    handler: src/handlers/authorizerToken.handler
    timeout: 30
    memorySize: 128
    tags:
      Name: authToken
      Type: authorizer
  webhook:
    handler: src/handlers/webhook.handler
    timeout: 30
    memorySize: 128
    events:
      - http:
          path: newwebhook
          method: post
          authorizer:
            name: authToken
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
          response:
            statusCodes: ${self:custom.settings}
    tags:
      Name: webhook
      Type: Endpoint
  postTestEmail:
    handler: src/handlers/Dummy.handler
    timeout: 30
    memorySize: 128
    events:
      - http:
          path: webhook
          method: post
          authorizer:
            name: auth
            resultTtlInSeconds: 0
            identitySource: method.request.querystring.requestId,method.request.querystring.accountId
            type: request
          response:
            statusCodes: ${self:custom.settings}
            #identityValidationExpression: someRegex
#          request:
#            passThrough: NEVER
#            template:
#              application/json: '{
#                                  "requestId": "$input.path(''requestId'')",
#                                  "accountId": "$input.path(''accountId'')"
#                                }'
    tags:
      Name: postTestEmail
      Type: Endpoint
  getStatus:
    handler: src/handlers/getStatus.getStatus
    timeout: 30
    memorySize: 512
    iamRoleStatementsInherit: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Query
        Resource:
          - arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.addressesTableName}*
    events:
      - http:
          path: email/status/{requestId}
          method: get
    tags:
      Name: getStatus
      Type: Endpoint

  createEmail:
    handler: src/handlers/createEmail.main
    timeout: 30
    memorySize: 512
    iamRoleStatementsInherit: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:GetItem
          - dynamodb:Query
        Resource:
          - arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.emailsTableName}
          - arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.addressesTableName}*
          - arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.sessionsTableName}
    events:
      - http:
          path: email
          method: post
    tags:
      Name: createEmail
      Type: Endpoint

  listEmails:
    handler: src/handlers/listEmails.listEmails
    timeout: 30
    memorySize: 512
    events:
      - http:
          path: email
          method: get
